dat <- expand.grid(
x1 = paste0('P', LETTERS[1:5]),
x2 = paste0('Q', LETTERS[1:3])
)
dat
dat <- expand.grid(
x1 = paste0('P', LETTERS[1:5]),
x2 = paste0('Q', LETTERS[1:3]),
rep = paste0('rep', 1:3)
)
dat
dat <- expand.grid(
x1 = paste0('P', LETTERS[1:5]),
x2 = paste0('Q', LETTERS[1:3]),
rep = paste0('rep', 1:3)
)
eff_x1 <- c(0, 4, 5, 7, 9)
eff_x2 <- c(0, -2, -5)
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
# calculate
n <- nrow(dat)
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
plot(x1, y, dat)
plot(dat$x1, dat$y, )
plot(dat$x2, dat$y)
plot(dat$x1, dat$y, type = 'p')
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x1, dat$y); points(jitter(dat$x1), dat$y)
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
# create simulation data
create.simulation.data <- function() {
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
# create data
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# set effects
eff_x1 <- c(0, 4, 5, 7, 9)
eff_x2 <- c(0, -2, -5)
names(eff_x1) <- name_x1
names(eff_x2) <- name_x2
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
dat
}
dat <- create.simulation.data()
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
?TukeyHSD
?Tukey
?TukeyHSD
aov_res <- aov(y ~ x1 + x2, dat)
aov_res
summary(aov_res)
res <- TukeyHSD(aov_res)
summary(res)
res <- TukeyHSD(aov_res, which = c('x1', 'x2'))
summary(res)
res <- TukeyHSD(aov_res, which = c('x1'))
res
res <- TukeyHSD(aov_res, which = c('x1', 'x2'))
res
tukey.res <- res
factor.name <- 'x1'
str(tukey.res)
tukey.res$x1
tukey.res$x2
# extract result matirx of TukeyHSD
tukey.res.mat <- tukey.res[[factor.name]]
tukey.res.mat
# create simulation data
create.simulation.data <- function() {
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
# create data
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# set effects
eff_x1 <- c(4, 5, 0, 7, 9)
eff_x2 <- c(0, -2, -5)
names(eff_x1) <- name_x1
names(eff_x2) <- name_x2
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
dat
}
dat <- create.simulation.data()
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
plot(dat$x1, dat$y); points(dat$x1, dat$y)
aov_res <- aov(y ~ x1 + x2, dat)
res <- TukeyHSD(aov_res, which = c('x1', 'x2'))
res
tukey.res <- res
factor.name <- 'x1'
# extract result matirx of TukeyHSD
tukey.res.mat <- tukey.res[[factor.name]]
tukey.res.mat
str(aov_res)
# create simulation data
create.simulation.data <- function() {
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
# create data
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# set effects
eff_x1 <- c(4, 5, 0, 7, 9)
eff_x2 <- c(0, -2, -5)
names(eff_x1) <- name_x1
names(eff_x2) <- name_x2
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
dat
}
dat <- create.simulation.data()
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
aov_res <- aov(y ~ x1 + x2, dat)
res <- TukeyHSD(aov_res, which = c('x1', 'x2'))
res
aov_res <- aov_res
factor_name <- 'x1'
# extract result matirx of TukeyHSD
tukey_res <- TukeyHSD(aov_res, which = factor_name, ...)
tukey_res <- TukeyHSD(aov_res, which = factor_name)
# tukey_res <- TukeyHSD(aov_res, which = factor_name)
tukey_res
# tukey_res <- TukeyHSD(aov_res, which = factor_name)
tukey_res <- tukey_res[[factor_name]]
tukey_res
aov_res$model
class(aov_res$model)
# create simulation data
create.simulation.data <- function() {
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
# create data
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# set effects
eff_x1 <- c(4, 5, 0, 7, 9)
eff_x2 <- c(0, -2, -5)
names(eff_x1) <- name_x1
names(eff_x2) <- name_x2
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
dat
}
dat <- create.simulation.data()
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
aov_res <- aov(y ~ x1 + x2, dat)
res <- TukeyHSD(aov_res, which = c('x1', 'x2'))
res
# create simulation data
create.simulation.data <- function() {
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
# create data
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# set effects
eff_x1 <- c(4, 5, 0, 7, 9)
eff_x2 <- c(-2, 0, -5)
names(eff_x1) <- name_x1
names(eff_x2) <- name_x2
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
dat
}
dat <- create.simulation.data()
plot(dat$x1, dat$y); points(dat$x1, dat$y)
# create simulation data
create.simulation.data <- function() {
# factor name
name_x1 <- paste0('P', LETTERS[1:5])
name_x2 <- paste0('Q', LETTERS[1:3])
# create data
dat <- expand.grid(
x1 = name_x1,
x2 = name_x2,
rep = paste0('rep', 1:3)
)
# set effects
eff_x1 <- c(4, 5, 0, 9, 7)
eff_x2 <- c(-2, 0, -5)
names(eff_x1) <- name_x1
names(eff_x2) <- name_x2
sd_e <- 1
# calculate
n <- nrow(dat)
dat$y <- with(
dat, eff_x1[x1] + eff_x2[x2] + rnorm(n, 0, sd_e)
)
dat
}
dat <- create.simulation.data()
plot(dat$x1, dat$y); points(dat$x1, dat$y)
plot(dat$x2, dat$y); points(dat$x2, dat$y)
aov_res <- aov(y ~ x1 + x2, dat)
res <- TukeyHSD(aov_res, which = c('x1', 'x2'))
res
rm(res)
# extract result matirx of TukeyHSD
tukey_res <- TukeyHSD(aov_res, which = factor_name, ...)
tukey_res <- TukeyHSD(aov_res, which = factor_name)
# aov_res <- aov_res
factor_name <- 'x1'
tukey_res <- TukeyHSD(aov_res, which = factor_name)
# tukey_res <- TukeyHSD(aov_res, which = factor_name)
tukey_res <- tukey_res[[factor_name]]
tukey_res
# list factor name in order of mean values
aov_res$coefficients
aov_res$effects
?aov
